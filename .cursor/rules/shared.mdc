---
description: 
globs: 
alwaysApply: true
---
# AI Rules for {app-name}

{project-description}

## Tech Stack

- Angular 19
- Angular Material 19
- TypeScript 5
- Tailwind 4

## Project Structure

When introducing changes to the project, always follow the directory structure below:

- `./src` - source code
- `./src/apps` - applications
- `./src/apps/my-health` - main MyHealth application
- `./src/apps/my-firebase-app` - Firebase application
- `./src/apps/my-firebase-functions` - Firebase functions for backend code
- `./src/libs` - NX libraries
- `./src/libs/domain` - NX library for domain logic, models and repository
- `./src/libs/shared` - NX library for shared code not connected to domain
- `./src/libs/my-health` - lazy loaded modules

When modifying the directory structure, always update this section.

## Coding practices

### Guidelines for clean code

- Use feedback from linters to improve the code when making changes.
- Prioritize error handling and edge cases.
- Encapsulate Angular Fire requests in services, so we can change BaaS provider in future.
- Handle errors and edge cases at the beginning of functions.
- Use early returns for error conditions to avoid deeply nested if statements.
- Place the happy path last in the function for improved readability.
- Avoid unnecessary else statements; use if-return pattern instead.
- Use guard clauses to handle preconditions and invalid states early.
- Implement proper error logging and user-friendly error messages.
- Consider using custom error types or error factories for consistent error handling.
